{
	//  开启行数提示
	"editor.lineNumbers": "on",
	// 开启自动显示建议
	"editor.quickSuggestions": {
		"other": true,
		"comments": true,
		"strings": true
	},
	//  制表符符号eslint
	"editor.tabSize": 2,
	//  让函数(名)和后面的括号之间加个空格
	"javascript.format.insertSpaceBeforeFunctionParenthesis": true,
	//  格式化.vue中html
	"vetur.format.defaultFormatter.html": "js-beautify-html",
	//  让vue中的js按编辑器自带的ts格式进行格式化
	"vetur.format.defaultFormatter.js": "vscode-typescript",
	//  每次保存的时候自动格式化
	//  "editor.formatOnSave": true,
	"files.autoSave": "afterDelay",
	//  指定vscode的eslint所处理的文件的后缀
	"eslint.options": {
		"extensions": [
			".js",
			".vue",
			".ts",
			".tsx"
		]
	},
	// 控制资源管理器是否在把文件删除到废纸篓时进行确认。
	"explorer.confirmDelete": false,
	// 调整窗口的缩放级别
	// "window.zoomLevel": 0,
	// 针对某种语言，配置替代编辑器设置
	"[javascript]": {
		"editor.defaultFormatter": "vscode.typescript-language-features"
	},
	// 控制是否应在遇到提交字符时接受建议。
	// 例如，在 JavaScript 中，半角分号 (;) 可以为提交字符，能够在接受建议的同时键入该字符
	"editor.acceptSuggestionOnCommitCharacter": false,
	// 控制活动代码段是否阻止快速建议
	"editor.suggest.snippetsPreventQuickSuggestions": false,
	// 配置语言的文件关联
	"files.associations": {
		"*.vue": "vue",
		"*.html": "html"
	},
	"[jsonc]": {
		"editor.defaultFormatter": "vscode.json-language-features"
	},
	// 保存代码时操作
	"editor.codeActionsOnSave": {
		"source.fixAll": true,
	},
	"eslint.validate": [
		"javascript",
		"javascriptreact",
		"typescript"
	],
	// 是否一直启用
	"eslint.alwaysShowStatus": true,
	"stylelint.enable": true,
	"css.validate": false,
	"scss.validate": false
}